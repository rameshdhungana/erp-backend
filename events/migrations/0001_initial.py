# Generated by Django 2.0.7 on 2019-05-28 10:13

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('items', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccommodationRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('room_number', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('title', models.CharField(max_length=255)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('early_bird_date', models.DateTimeField()),
                ('is_single_day_event', models.BooleanField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('venue_location', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('summary', models.TextField()),
                ('allow_group_registration', models.BooleanField(default=True)),
                ('max_group_limit', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed'), ('Paused', 'Paused'), ('Testing', 'Testing')], default='Testing', max_length=255)),
                ('show_total_capacity', models.BooleanField(default=False)),
                ('show_remaining_seats', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('show_start_time', models.BooleanField(default=False)),
                ('show_end_time', models.BooleanField(default=False)),
                ('timezone', models.CharField(choices=[('Europe/Andorra', 'Europe/Andorra'), ('Asia/Kabul', 'Asia/Kabul'), ('America/Antigua', 'America/Antigua'), ('Europe/Tirane', 'Europe/Tirane'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Africa/Luanda', 'Africa/Luanda'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos_Aires'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('America/Argentina/La_Rioja', 'America/Argentina/La_Rioja'), ('America/Argentina/San_Juan', 'America/Argentina/San_Juan'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio_Gallegos'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('Europe/Vienna', 'Europe/Vienna'), ('Australia/Lord_Howe', 'Australia/Lord_Howe'), ('Australia/Hobart', 'Australia/Hobart'), ('Australia/Currie', 'Australia/Currie'), ('Australia/Melbourne', 'Australia/Melbourne'), ('Australia/Sydney', 'Australia/Sydney'), ('Australia/Broken_Hill', 'Australia/Broken_Hill'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Australia/Darwin', 'Australia/Darwin'), ('Australia/Perth', 'Australia/Perth'), ('Asia/Baku', 'Asia/Baku'), ('America/Barbados', 'America/Barbados'), ('Asia/Dhaka', 'Asia/Dhaka'), ('Europe/Brussels', 'Europe/Brussels'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Europe/Sofia', 'Europe/Sofia'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Asia/Brunei', 'Asia/Brunei'), ('America/La_Paz', 'America/La_Paz'), ('America/Noronha', 'America/Noronha'), ('America/Belem', 'America/Belem'), ('America/Fortaleza', 'America/Fortaleza'), ('America/Recife', 'America/Recife'), ('America/Araguaina', 'America/Araguaina'), ('America/Maceio', 'America/Maceio'), ('America/Bahia', 'America/Bahia'), ('America/Sao_Paulo', 'America/Sao_Paulo'), ('America/Campo_Grande', 'America/Campo_Grande'), ('America/Cuiaba', 'America/Cuiaba'), ('America/Porto_Velho', 'America/Porto_Velho'), ('America/Boa_Vista', 'America/Boa_Vista'), ('America/Manaus', 'America/Manaus'), ('America/Eirunepe', 'America/Eirunepe'), ('America/Rio_Branco', 'America/Rio_Branco'), ('America/Nassau', 'America/Nassau'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Europe/Minsk', 'Europe/Minsk'), ('America/Belize', 'America/Belize'), ('America/St_Johns', 'America/St_Johns'), ('America/Halifax', 'America/Halifax'), ('America/Glace_Bay', 'America/Glace_Bay'), ('America/Moncton', 'America/Moncton'), ('America/Goose_Bay', 'America/Goose_Bay'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Montreal', 'America/Montreal'), ('America/Toronto', 'America/Toronto'), ('America/Nipigon', 'America/Nipigon'), ('America/Thunder_Bay', 'America/Thunder_Bay'), ('America/Pangnirtung', 'America/Pangnirtung'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Atikokan', 'America/Atikokan'), ('America/Rankin_Inlet', 'America/Rankin_Inlet'), ('America/Winnipeg', 'America/Winnipeg'), ('America/Rainy_River', 'America/Rainy_River'), ('America/Cambridge_Bay', 'America/Cambridge_Bay'), ('America/Regina', 'America/Regina'), ('America/Swift_Current', 'America/Swift_Current'), ('America/Edmonton', 'America/Edmonton'), ('America/Yellowknife', 'America/Yellowknife'), ('America/Inuvik', 'America/Inuvik'), ('America/Dawson_Creek', 'America/Dawson_Creek'), ('America/Vancouver', 'America/Vancouver'), ('America/Whitehorse', 'America/Whitehorse'), ('America/Dawson', 'America/Dawson'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Africa/Abidjan', 'Africa/Abidjan'), ('America/Santiago', 'America/Santiago'), ('Pacific/Easter', 'Pacific/Easter'), ('Africa/Douala', 'Africa/Douala'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Harbin', 'Asia/Harbin'), ('Asia/Chongqing', 'Asia/Chongqing'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Asia/Kashgar', 'Asia/Kashgar'), ('America/Bogota', 'America/Bogota'), ('America/Costa_Rica', 'America/Costa_Rica'), ('America/Havana', 'America/Havana'), ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Europe/Prague', 'Europe/Prague'), ('Europe/Berlin', 'Europe/Berlin'), ('Africa/Djibouti', 'Africa/Djibouti'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('America/Dominica', 'America/Dominica'), ('America/Santo_Domingo', 'America/Santo_Domingo'), ('America/Guayaquil', 'America/Guayaquil'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('Europe/Tallinn', 'Europe/Tallinn'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Asmera', 'Africa/Asmera'), ('Africa/Addis_Ababa', 'Africa/Addis_Ababa'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Europe/Paris', 'Europe/Paris'), ('Africa/Libreville', 'Africa/Libreville'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('Africa/Accra', 'Africa/Accra'), ('Africa/Banjul', 'Africa/Banjul'), ('Africa/Conakry', 'Africa/Conakry'), ('Europe/Athens', 'Europe/Athens'), ('America/Guatemala', 'America/Guatemala'), ('America/Guatemala', 'America/Guatemala'), ('Africa/Bissau', 'Africa/Bissau'), ('America/Guyana', 'America/Guyana'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('Europe/Budapest', 'Europe/Budapest'), ('Asia/Jakarta', 'Asia/Jakarta'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Asia/Makassar', 'Asia/Makassar'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Europe/Dublin', 'Europe/Dublin'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Asia/Calcutta', 'Asia/Calcutta'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Asia/Tehran', 'Asia/Tehran'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('Europe/Rome', 'Europe/Rome'), ('America/Jamaica', 'America/Jamaica'), ('Asia/Amman', 'Asia/Amman'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Asia/Bishkek', 'Asia/Bishkek'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Beirut', 'Asia/Beirut'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Africa/Maseru', 'Africa/Maseru'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('Europe/Riga', 'Europe/Riga'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('Pacific/Majuro', 'Pacific/Majuro'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Europe/Skopje', 'Europe/Skopje'), ('Africa/Bamako', 'Africa/Bamako'), ('Asia/Rangoon', 'Asia/Rangoon'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Europe/Malta', 'Europe/Malta'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Indian/Maldives', 'Indian/Maldives'), ('Africa/Blantyre', 'Africa/Blantyre'), ('America/Mexico_City', 'America/Mexico_City'), ('America/Cancun', 'America/Cancun'), ('America/Merida', 'America/Merida'), ('America/Monterrey', 'America/Monterrey'), ('America/Mazatlan', 'America/Mazatlan'), ('America/Chihuahua', 'America/Chihuahua'), ('America/Hermosillo', 'America/Hermosillo'), ('America/Tijuana', 'America/Tijuana'), ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'), ('Asia/Kuching', 'Asia/Kuching'), ('Africa/Maputo', 'Africa/Maputo'), ('Africa/Windhoek', 'Africa/Windhoek'), ('Africa/Niamey', 'Africa/Niamey'), ('Africa/Lagos', 'Africa/Lagos'), ('America/Managua', 'America/Managua'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Europe/Oslo', 'Europe/Oslo'), ('Asia/Katmandu', 'Asia/Katmandu'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Pacific/Auckland', 'Pacific/Auckland'), ('Pacific/Chatham', 'Pacific/Chatham'), ('Asia/Muscat', 'Asia/Muscat'), ('America/Panama', 'America/Panama'), ('America/Lima', 'America/Lima'), ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Karachi', 'Asia/Karachi'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Pacific/Palau', 'Pacific/Palau'), ('America/Asuncion', 'America/Asuncion'), ('Asia/Qatar', 'Asia/Qatar'), ('Europe/Bucharest', 'Europe/Bucharest'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('Europe/Moscow', 'Europe/Moscow'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Europe/Samara', 'Europe/Samara'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Magadan', 'Asia/Magadan'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Asia/Anadyr', 'Asia/Anadyr'), ('Africa/Kigali', 'Africa/Kigali'), ('Asia/Riyadh', 'Asia/Riyadh'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Indian/Mahe', 'Indian/Mahe'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Asia/Singapore', 'Asia/Singapore'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Europe/Bratislava', 'Europe/Bratislava'), ('Africa/Freetown', 'Africa/Freetown'), ('Europe/San_Marino', 'Europe/San_Marino'), ('Africa/Dakar', 'Africa/Dakar'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('America/Paramaribo', 'America/Paramaribo'), ('Africa/Sao_Tome', 'Africa/Sao_Tome'), ('Asia/Damascus', 'Asia/Damascus'), ('Africa/Lome', 'Africa/Lome'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Africa/Tunis', 'Africa/Tunis'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('Europe/Istanbul', 'Europe/Istanbul'), ('America/Port_of_Spain', 'America/Port_of_Spain'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Africa/Dar_es_Salaam', 'Africa/Dar_es_Salaam'), ('Europe/Kiev', 'Europe/Kiev'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Europe/Simferopol', 'Europe/Simferopol'), ('Africa/Kampala', 'Africa/Kampala'), ('America/New_York', 'America/New_York'), ('America/Detroit', 'America/Detroit'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('America/Chicago', 'America/Chicago'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('America/Menominee', 'America/Menominee'), ('America/North_Dakota/Center', 'America/North_Dakota/Center'), ('America/North_Dakota/New_Salem', 'America/North_Dakota/New_Salem'), ('America/Denver', 'America/Denver'), ('America/Boise', 'America/Boise'), ('America/Shiprock', 'America/Shiprock'), ('America/Phoenix', 'America/Phoenix'), ('America/Los_Angeles', 'America/Los_Angeles'), ('America/Anchorage', 'America/Anchorage'), ('America/Juneau', 'America/Juneau'), ('America/Yakutat', 'America/Yakutat'), ('America/Nome', 'America/Nome'), ('America/Adak', 'America/Adak'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('America/Montevideo', 'America/Montevideo'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Asia/Tashkent', 'Asia/Tashkent'), ('Europe/Vatican', 'Europe/Vatican'), ('America/Caracas', 'America/Caracas'), ('Asia/Saigon', 'Asia/Saigon'), ('Pacific/Efate', 'Pacific/Efate'), ('Asia/Aden', 'Asia/Aden'), ('Africa/Lusaka', 'Africa/Lusaka'), ('Africa/Harare', 'Africa/Harare'), ('Africa/Algiers', 'Africa/Algiers'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Asia/Phnom_Penh', 'Asia/Phnom_Penh'), ('Africa/Bangui', 'Africa/Bangui'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('Indian/Comoro', 'Indian/Comoro'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Asia/Dili', 'Asia/Dili'), ('America/El_Salvador', 'America/El_Salvador'), ('Africa/Malabo', 'Africa/Malabo'), ('America/Grenada', 'America/Grenada'), ('Asia/Almaty', 'Asia/Almaty'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Asia/Aqtau', 'Asia/Aqtau'), ('Asia/Oral', 'Asia/Oral'), ('Asia/Vientiane', 'Asia/Vientiane'), ('Pacific/Truk', 'Pacific/Truk'), ('Pacific/Ponape', 'Pacific/Ponape'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('Europe/Chisinau', 'Europe/Chisinau'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Podgorica', 'Europe/Podgorica'), ('Africa/Casablanca', 'Africa/Casablanca'), ('America/St_Kitts', 'America/St_Kitts'), ('America/St_Lucia', 'America/St_Lucia'), ('America/St_Vincent', 'America/St_Vincent'), ('Pacific/Apia', 'Pacific/Apia'), ('Europe/Belgrade', 'Europe/Belgrade'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('Europe/Madrid', 'Europe/Madrid'), ('Africa/Ceuta', 'Africa/Ceuta'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Asia/Colombo', 'Asia/Colombo'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Europe/Zurich', 'Europe/Zurich'), ('Asia/Dubai', 'Asia/Dubai'), ('Europe/London', 'Europe/London'), ('Asia/Taipei', 'Asia/Taipei'), ('Asia/Hong_Kong', 'Asia/Hong_Kong'), ('CET', 'CET'), ('America/Puerto_Rico', 'America/Puerto_Rico')], max_length=128)),
                ('only_offsite_registration', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventAttendee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('smart_card_number', models.CharField(blank=True, max_length=6, null=True)),
                ('name_in_smart_card', models.CharField(blank=True, max_length=255, null=True)),
                ('alternate_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('alternate_phone_number', models.CharField(blank=True, max_length=32, null=True)),
                ('is_senior_citizen', models.BooleanField(default=False)),
                ('is_pwk', models.BooleanField(default=False)),
                ('registration_status', models.CharField(choices=[('Initiated', 'Initiated'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], max_length=20)),
                ('group_type', models.CharField(blank=True, choices=[('OffSite', 'OffSite'), ('OnSite', 'OnSite')], max_length=10)),
                ('confirmation_code', models.CharField(blank=True, max_length=64)),
                ('changed_to_offsite', models.BooleanField(default=False)),
                ('registration_is_cancelled', models.BooleanField(default=False)),
                ('changed_to_onsite', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('group_type', models.CharField(choices=[('OffSite', 'OffSite'), ('OnSite', 'OnSite'), ('Both', 'Both')], max_length=10)),
                ('item_capacity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('items_booked', models.PositiveIntegerField(default=0)),
                ('item_sharing_count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('discount_before_early_bird', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('discount_after_early_bird', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('is_day_pass_item', models.BooleanField()),
                ('senior_citizen_discount_applicable', models.BooleanField(default=False)),
                ('ask_for_arrival_datetime', models.BooleanField(default=False)),
                ('ask_for_departure_datetime', models.BooleanField(default=False)),
                ('ask_for_pickup_location', models.BooleanField(default=False)),
                ('accommodation_rooms', models.ManyToManyField(blank=True, to='events.AccommodationRoom')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='EventItemGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_multi_select', models.BooleanField()),
                ('icon_type', models.CharField(blank=True, max_length=255)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventRegistrationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('total_capacity', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed'), ('Paused', 'Paused'), ('Testing', 'Testing')], default='Testing', max_length=20)),
                ('required_otp', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
            ],
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('image', models.ImageField(upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('logo', models.ManyToManyField(to='events.Images')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('label', models.TextField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Organizer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SeatAllocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('seat_number', models.IntegerField()),
                ('event_attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventAttendee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransportationInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('arrival_datetime', models.DateTimeField(null=True)),
                ('departure_datetime', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransportationPickupLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('location', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, null=True)),
                ('description', models.TextField(blank=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
                ('event_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventItem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='transportationinfo',
            name='pickup_location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.TransportationPickupLocation'),
        ),
        migrations.AddField(
            model_name='eventitemgroup',
            name='event_registration_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventRegistrationType'),
        ),
        migrations.AddField(
            model_name='eventitem',
            name='event_registration_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventRegistrationType'),
        ),
        migrations.AddField(
            model_name='eventitem',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventItemGroup'),
        ),
        migrations.AddField(
            model_name='eventitem',
            name='item_master',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.ItemMaster'),
        ),
        migrations.AddField(
            model_name='eventitem',
            name='transportation_pickup_locations',
            field=models.ManyToManyField(blank=True, to='events.TransportationPickupLocation'),
        ),
        migrations.AddField(
            model_name='eventattendee',
            name='event_registration_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventRegistrationType'),
        ),
        migrations.AddField(
            model_name='eventattendee',
            name='registered_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.EventAttendee'),
        ),
        migrations.AddField(
            model_name='eventattendee',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventCategory'),
        ),
        migrations.AddField(
            model_name='event',
            name='description_images',
            field=models.ManyToManyField(related_name='event_description', to='events.Images'),
        ),
        migrations.AddField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Organizer'),
        ),
        migrations.AddField(
            model_name='event',
            name='title_images',
            field=models.ManyToManyField(related_name='event_title', to='events.Images'),
        ),
        migrations.AddField(
            model_name='event',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventType'),
        ),
        migrations.AddField(
            model_name='accommodationroom',
            name='event_attendee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='events.EventAttendee'),
        ),
        migrations.AlterUniqueTogether(
            name='eventregistrationtype',
            unique_together={('name', 'event')},
        ),
        migrations.AlterUniqueTogether(
            name='eventitem',
            unique_together={('item_master', 'event_registration_type', 'event', 'group_type')},
        ),
        migrations.AlterUniqueTogether(
            name='eventattendee',
            unique_together={('event', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='accommodationroom',
            unique_together={('room_number', 'event_attendee')},
        ),
    ]
