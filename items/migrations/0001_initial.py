# Generated by Django 2.0.7 on 2019-05-28 10:12

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('options', models.CharField(blank=True, max_length=255)),
                ('item_for_booking', models.BooleanField(default=False)),
                ('item_for_sale', models.BooleanField(default=True)),
                ('item_for_purchase', models.BooleanField(default=False)),
                ('item_for_stock', models.BooleanField(default=True)),
                ('item_for_rent', models.BooleanField(default=False)),
                ('item_for_package', models.BooleanField(default=False)),
                ('item_has_substitute', models.BooleanField(default=False)),
                ('item_is_veg', models.BooleanField(default=False)),
                ('item_is_non_veg', models.BooleanField(default=False)),
                ('item_is_liquor', models.BooleanField(default=False)),
                ('item_is_balance_topup', models.BooleanField(default=False)),
                ('item_is_balance_used', models.BooleanField(default=False)),
                ('item_is_reward', models.BooleanField(default=False)),
                ('item_is_discount', models.BooleanField(default=False)),
                ('item_is_service_charge', models.BooleanField(default=False)),
                ('item_is_tax', models.BooleanField(default=False)),
                ('senior_citizen_discount_per', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('ask_for_delivery', models.BooleanField(default=False)),
                ('item_rate', models.DecimalField(decimal_places=2, max_digits=19)),
                ('item_sc_per', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('item_tax_per', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('item_mrp', models.DecimalField(decimal_places=2, max_digits=19)),
                ('is_public', models.BooleanField(default=True)),
                ('status', models.BooleanField(default=True)),
                ('is_coupon_item', models.BooleanField(default=False)),
                ('item_in_stock', models.PositiveIntegerField()),
                ('item_rate_deposits', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('has_addon_items', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.ItemCategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemProcessMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(choices=[('GEN', 'GEN'), ('KIT', 'KIT')], db_index=True, default='GENERAL', max_length=32, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(choices=[('units', 'units')], max_length=64, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.ItemProcessMaster'),
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.ItemService'),
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='uom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.UnitOfMeasurement'),
        ),
    ]
