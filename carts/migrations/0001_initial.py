# Generated by Django 2.0.7 on 2019-05-28 10:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0001_initial'),
        ('items', '0001_initial'),
        ('coupons', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('transaction_type', models.CharField(choices=[('Sale', 'Sale'), ('Cancel', 'Cancel'), ('Receipt', 'Receipt'), ('Refund', 'Refund'), ('Coupon', 'Coupon'), ('Balance', 'Balance'), ('Self Transfer', 'Self Transfer'), ('Item-Tax-Or-Service-Charge', 'Item-Tax-Or-Service-Charge'), ('Cancellation-Charge', 'Cancellation-Charge')], max_length=255)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=19)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=19)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('amount_net', models.DecimalField(decimal_places=2, max_digits=19)),
                ('item_sc', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('amount_taxable', models.DecimalField(decimal_places=2, max_digits=19)),
                ('item_tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('amount_final', models.DecimalField(decimal_places=2, max_digits=19)),
                ('is_coupon_item', models.BooleanField(default=False)),
                ('entry_from_ordered_item', models.BooleanField(default=False)),
                ('apply_cancellation_policy', models.BooleanField(default=False)),
                ('canceled_ordered_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.OrderedItem')),
                ('coupon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coupons.Coupon')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
                ('event_attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventAttendee')),
                ('event_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='events.EventItem')),
                ('event_registration_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventRegistrationType')),
                ('item_master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.ItemMaster')),
                ('ordered_by_attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendee_carts', to='events.EventAttendee')),
                ('ordered_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_carts', to=settings.AUTH_USER_MODEL)),
                ('transportation_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.TransportationInfo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'created_at',
            },
        ),
    ]
